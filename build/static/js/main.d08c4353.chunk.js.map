{"version":3,"sources":["redux/actions/action_types/PROJ_ACTION_TYPES.tsx","redux/actions/index.tsx","components/Sidebar/ProjNavs/ProjNavs.tsx","components/Sidebar/Sidebar.tsx","components/pages/Landing/Landing.tsx","components/pages/Projects/ProjectPage/utils/consts/BannerCssClasses.tsx","components/pages/Projects/ProjectPage/utils/models/TechIcon.tsx","components/pages/Projects/ProjectPage/utils/consts/TechIcons.tsx","components/pages/Projects/ProjectPage/ProjectPage.tsx","components/pages/Projects/ProjectPage/ProjectA/ProjectA.tsx","components/pages/Projects/ProjectPage/ProjectB/ProjectB.tsx","components/pages/Projects/ProjectsRouter.tsx","components/pages/Contact/Contact.tsx","App.tsx","serviceWorker.ts","redux/reducers/index.tsx","redux/store/index.tsx","index.tsx"],"names":["PROJ_ACTION_TYPES","PROJ_ACTIONS","changeProj","payload","type","CHANGE_PROJECT","ProjNavs","proj1Marker","useRef","proj2Marker","activeProj","useSelector","state","dispatch","useDispatch","useEffect","current","style","visibility","projLinks","useMemo","pl","push","className","key","onClick","ref","padding","id","Sidebar","useState","showProjs","toggleShowProjs","location","useLocation","pathname","navLinks","nl","to","fontFamily","fontSize","marginTop","Landing","props","src","alt","BANNER_CSS_CLASSES","TechIcon","title","imgUrl","this","TechIcons","rails","nokogiri","sql","react","nodejs","socketio","webrtc","electron","aws","ProjectPage","icons","techIcons","map","iconKey","index","tiObj","Tooltip","arrow","placement","externals","exts","forEach","extObj","href","url","length","projBanner","desc","ProjectA","bannerVid","controls","BASE","PHONE","ProjectB","bannerImg","DESKTOP","paddingLeft","paddingRight","paddingTop","paddingBottom","ProjectsRouter","projects","p","Contact","contactIcons","ci","contactUrl","App","exact","path","component","Boolean","window","hostname","match","initialState","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d08c4353.chunk.js","sourcesContent":["enum PROJ_ACTION_TYPES {\n\tCHANGE_PROJECT = \"CHANGE_PROJECT\",\n}\n\nexport default PROJ_ACTION_TYPES;\n","import PROJ_ACTION_TYPES from \"./action_types/PROJ_ACTION_TYPES\";\n\nconst PROJ_ACTIONS = {\n\tchangeProj: (payload: number) => {\n\t\treturn { type: PROJ_ACTION_TYPES.CHANGE_PROJECT, payload };\n\t},\n};\n\nexport default PROJ_ACTIONS;\n","import React, { useEffect, useMemo, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SlideDown } from \"react-slidedown\";\nimport \"react-slidedown/lib/slidedown.css\";\n\nimport PROJ_ACTIONS from \"../../../redux/actions/index\";\nimport storeState from \"../../../utils/types/redux/state\";\n\nimport \"./ProjNavs.css\";\n\nexport default function ProjNavs() {\n\tconst proj1Marker = useRef<HTMLSpanElement>(null);\n\tconst proj2Marker = useRef<HTMLSpanElement>(null);\n\n\tconst activeProj = useSelector((state: storeState) => state.activeProj);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (activeProj === 1) {\n\t\t\tproj2Marker.current!.style.visibility = \"hidden\";\n\t\t\tproj1Marker.current!.style.visibility = \"visible\";\n\t\t} else if (activeProj === 2) {\n\t\t\tproj1Marker.current!.style.visibility = \"hidden\";\n\t\t\tproj2Marker.current!.style.visibility = \"visible\";\n\t\t}\n\t}, [activeProj]);\n\n\tconst projLinks = useMemo((): JSX.Element[] => {\n\t\tconst pl = [];\n\n\t\tpl.push(\n\t\t\t<span\n\t\t\t\tclassName=\"projNav\"\n\t\t\t\tkey={1}\n\t\t\t\tonClick={() => dispatch(PROJ_ACTIONS.changeProj(1))}\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tref={proj1Marker}\n\t\t\t\t\tstyle={{ padding: \"5px\", visibility: \"hidden\" }}\n\t\t\t\t>\n\t\t\t\t\t•\n\t\t\t\t</span>\n\t\t\t\tCampFire\n\t\t\t</span>\n\t\t);\n\t\tpl.push(\n\t\t\t<span\n\t\t\t\tclassName=\"projNav\"\n\t\t\t\tkey={2}\n\t\t\t\tonClick={() => dispatch(PROJ_ACTIONS.changeProj(2))}\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tref={proj2Marker}\n\t\t\t\t\tstyle={{ padding: \"5px\", visibility: \"hidden\" }}\n\t\t\t\t>\n\t\t\t\t\t•\n\t\t\t\t</span>\n\t\t\t\tAlfred\n\t\t\t</span>\n\t\t);\n\n\t\treturn pl;\n\t}, [dispatch]);\n\n\treturn (\n\t\t<SlideDown>\n\t\t\t<div id=\"projNavs\">{projLinks}</div>\n\t\t</SlideDown>\n\t);\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport ProjNavs from \"./ProjNavs/ProjNavs\";\n\nimport \"./Sidebar.css\";\nimport PROJ_ACTIONS from \"../../redux/actions/index\";\n\nexport default function Sidebar() {\n\tconst [showProjs, toggleShowProjs] = useState(false);\n\tconst location = useLocation();\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tlocation.pathname === \"/projects\"\n\t\t\t? toggleShowProjs(true)\n\t\t\t: toggleShowProjs(false);\n\t}, [location]);\n\n\tconst navLinks = useMemo(() => {\n\t\tconst nl = [];\n\n\t\tnl.push(\n\t\t\t<Link key=\"1\" className=\"sbLink\" to=\"/\">\n\t\t\t\tAbout\n\t\t\t</Link>\n\t\t);\n\t\tnl.push(\n\t\t\t<Link\n\t\t\t\tonClick={() => dispatch(PROJ_ACTIONS.changeProj(1))}\n\t\t\t\tkey=\"2\"\n\t\t\t\tclassName=\"sbLink\"\n\t\t\t\tto=\"/projects\"\n\t\t\t>\n\t\t\t\tProjects\n\t\t\t</Link>\n\t\t);\n\t\tif (showProjs) nl.push(<ProjNavs />);\n\t\tnl.push(\n\t\t\t<Link key=\"3\" className=\"sbLink\" to=\"/contact\">\n\t\t\t\tContact\n\t\t\t</Link>\n\t\t);\n\n\t\treturn nl;\n\t}, [showProjs, dispatch]);\n\n\treturn (\n\t\t<div id=\"sidebar\">\n\t\t\t<Link to=\"/\">\n\t\t\t\t<h1\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfontFamily: \"Quatro Sans\",\n\t\t\t\t\t\tfontSize: \"24px\",\n\t\t\t\t\t\tmarginTop: \"33%\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tYuval Drori\n\t\t\t\t</h1>\n\t\t\t</Link>\n\t\t\t<div id=\"nlContainer\">{navLinks}</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nimport \"./Landing.css\";\n\nexport interface props {}\n\nexport default function Landing(props: props) {\n\treturn (\n\t\t<div className=\"page\">\n\t\t\t<p className=\"pageTitle\">Yuval Drori</p>\n\t\t\t<p id=\"pageSubtitle\">\n\t\t\t\t{\n\t\t\t\t\t\"Back-End & Full-Stack Developer. Building the highest quality projects, worldwide.\"\n\t\t\t\t}\n\t\t\t</p>\n\t\t\t<img\n\t\t\t\tid=\"pitchImg\"\n\t\t\t\tsrc=\"https://res.cloudinary.com/dunirybkl/image/upload/v1600086165/portfoli/pitch_expr_jmcak2.png\"\n\t\t\t\t// src=\"https://res.cloudinary.com/dunirybkl/image/upload/v1600270202/portfoli/pitch_bw_bibyyr.jpg\"\n\t\t\t\talt=\"me\"\n\t\t\t/>\n\t\t\t<p className=\"pageTitle\">Who I am</p>\n\t\t\t<p className=\"pageExpl landingExpl\">\n\t\t\t\tI've been building great things since I was 7. I've always insisted that\n\t\t\t\tthe greatest thing anyone can do is create something from nothing. Led\n\t\t\t\tme to work with some of the biggest companies in their fields -\n\t\t\t\tsometimes reaching as far as Prime Ministers - first in Cyber-Security,\n\t\t\t\tnow in Web Development.\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\tI'm an independent developer, and I pride myself in being a premium\n\t\t\t\tfreelancer who delivers only the strictest, highest quality projects. I\n\t\t\t\tknow that what matters most, as a developer, is not necessarily knowing\n\t\t\t\tany specific framework and its patterns. This rigidness leads many\n\t\t\t\tfreelancers to deliver half-baked, disappointing projects that become a\n\t\t\t\theadache for you to maintain later on. I know that rather, the most\n\t\t\t\timportant factor in a project's success, is the ability to constantly\n\t\t\t\tlearn and adapt my expertise to your needs, so I can match your\n\t\t\t\texpectations to the letter. It's what I do best, and I compromise on\n\t\t\t\tnothing less.\n\t\t\t</p>\n\t\t\t<p className=\"pageTitle\">What I do</p>\n\t\t\t<p className=\"pageExpl landingExpl\">\n\t\t\t\tI build top-quality Back-End, Front-End and Full-Stack projects of all\n\t\t\t\tsizes. Depending on your needs, I can offer services either as an\n\t\t\t\tindependent developer, or team-up with one of the internationally renown\n\t\t\t\tdesigners I work with to both professionally design and develop your\n\t\t\t\tproject. I work with companies and individuals of all levels of\n\t\t\t\tunderstanding of technology, from complete unfamiliarity to absolute\n\t\t\t\tmastery. I mostly use the MERN Stack + TypeScript and Redux to build and\n\t\t\t\tdeploy web scrapers, back-ends, and web/desktop applications. I also use\n\t\t\t\tsome more highly specialized technologies when needed, like WebRTC and\n\t\t\t\tSocket.io. You can find the full list of the tools I work with in the\n\t\t\t\t\"Knowledge\" section down below.\n\t\t\t</p>\n\t\t\t<p className=\"pageTitle\">Knowledge</p>\n\t\t\t<p className=\"pageExpl landingExpl\">\n\t\t\t\tMongoDB, Express.js, React.js, TypeScript, Electron.js, Node.js,\n\t\t\t\tPuppeteer, WebRTC (PeerJS), Socket.IO, AWS, HTML5, CSS, Ruby on Rails,\n\t\t\t\tActiveRecord, SQL, Git, Heroku, Cyber-Security, Client Management, Java,\n\t\t\t\tC#, Assembly x86, Technological Research\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n","enum BANNER_CSS_CLASSES {\n\tBASE = \"projBanner\",\n\tPHONE = \"phoneBanner\",\n\tDESKTOP = \"desktopBanner\",\n}\n\nexport default BANNER_CSS_CLASSES;\n","export default class TechIcon {\n\ttitle: string;\n\timgUrl: string;\n\n\tconstructor(title: string, imgUrl: string) {\n\t\tthis.title = title;\n\t\tthis.imgUrl = imgUrl;\n\t}\n}\n","import TechIcon from \"../models/TechIcon\";\n\ninterface tiObjs {\n\t[key: string]: TechIcon;\n}\n\nconst TechIcons: tiObjs = {\n\trails: new TechIcon(\n\t\t\"Ruby on Rails\",\n\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1599749468/portfoli/tech%20icons/railsIcon_xttkk3.png\"\n\t),\n\tnokogiri: new TechIcon(\n\t\t\"Nokogiri\",\n\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1599749493/portfoli/tech%20icons/nokogiriIcon_zzpfry.png\"\n\t),\n\tsql: new TechIcon(\n\t\t\"SQL\",\n\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1599749506/portfoli/tech%20icons/sqlIcon_puft4b.png\"\n\t),\n\treact: new TechIcon(\n\t\t\"React.js\",\n\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1600001274/portfoli/tech%20icons/react-ti_trmovn.png\"\n\t),\n\tnodejs: new TechIcon(\n\t\t\"Node.js\",\n\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1600001274/portfoli/tech%20icons/nodejs-ti_jbf5zt.png\"\n\t),\n\tsocketio: new TechIcon(\n\t\t\"Socket.io\",\n\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1600001274/portfoli/tech%20icons/socketio-ti_befxcg.png\"\n\t),\n\twebrtc: new TechIcon(\n\t\t\"WebRTC\",\n\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/c_scale,w_40/v1600094735/portfoli/tech%20icons/webrtc-ti_jdmhxr.png\"\n\t),\n\telectron: new TechIcon(\n\t\t\"Electron.js\",\n\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1600001274/portfoli/tech%20icons/electron-ti_imudw1.png\"\n\t),\n\taws: new TechIcon(\n\t\t\"AWS\",\n\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1600001274/portfoli/tech%20icons/aws-ti_muu8kr.png\"\n\t),\n};\n\nexport default TechIcons;\n","import React, { useMemo } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\n\nimport TechIcons from \"./utils/consts/TechIcons\";\n\nimport \"./ProjectPage.css\";\n\nimport external from \"../../../../utils/types/external\";\n\ntype tiKey = keyof typeof TechIcons;\ntype techIcons = Array<tiKey>;\n\ninterface Props {\n\ttitle: string;\n\tprojBanner: JSX.Element;\n\tdesc: string;\n\ttechIcons: techIcons;\n\texternals?: external[];\n}\n\nexport default function ProjectPage(props: Props) {\n\tconst icons = useMemo((): JSX.Element[] => {\n\t\treturn props.techIcons.map((iconKey: tiKey, index: number) => {\n\t\t\tconst tiObj = TechIcons[iconKey];\n\n\t\t\treturn (\n\t\t\t\t<Tooltip key={index} title={tiObj.title} arrow placement=\"top\">\n\t\t\t\t\t<img className=\"techIcon\" src={tiObj.imgUrl} alt=\"tech icon\" />\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t});\n\t}, [props.techIcons]);\n\n\tconst externals = useMemo((): JSX.Element[] | undefined => {\n\t\tif (props.externals) {\n\t\t\tconst exts: JSX.Element[] = [];\n\n\t\t\tprops.externals.forEach((extObj: external, index: number) => {\n\t\t\t\texts.push(\n\t\t\t\t\t<a key={index} href={extObj.url}>\n\t\t\t\t\t\t{extObj.title}\n\t\t\t\t\t</a>\n\t\t\t\t);\n\n\t\t\t\tif (index < props.externals!.length - 1) exts.push(<span> | </span>);\n\t\t\t});\n\n\t\t\treturn exts;\n\t\t}\n\t}, [props.externals]);\n\n\treturn (\n\t\t<div>\n\t\t\t<p className=\"pageTitle\">{props.title}</p>\n\t\t\t<span className=\"projBannerContainer\">{props.projBanner}</span>\n\t\t\t<p className=\"pageExpl projectExpl\">{props.desc}</p>\n\t\t\t<div className=\"tiContainer\">{icons}</div>\n\t\t\t{externals ? <div className=\"extsContainer\">{externals}</div> : null}\n\t\t</div>\n\t);\n}\n","import React, { useMemo } from \"react\";\nimport ProjectPage from \"../ProjectPage\";\n\nimport TechIcons from \"../utils/consts/TechIcons\";\nimport BANNER_CSS_CLASSES from \"../utils/consts/BannerCssClasses\";\n\nimport \"./ProjectA.css\";\n\nimport external from \"../../../../../utils/types/external\";\n\nexport default function ProjectA() {\n\tconst title = \"Alfred\";\n\n\tconst desc =\n\t\t\"Alfred was a travel assistant app that learns what you like to do and finds places where you can do it, no matter where in the world you are. Activity places were scraped from several websites and stored in a database and categorized by the type of activity and city it was in. Users had personal accounts and profiles where they could select what kind of activities they'd like to be presented with when going to a new place, as well as add them to an in-app schedule.. Each place could be reviewed and commented on inside the app. Places had a forum-like chat section where users could discuss the place, reply to each other and have conversations about it. Storing every activity/city combo in the database would have been expensive and unrealistic for the app's infrastructure. Instead, whenever a user searched for a type of activity in a certain city for the first time (for example, the first ever user to search for gyms in Vaduz, Liechtenstein), it was then scraped and stored in the database for future users to use. That way, the database was only ever as big as the users needed it to be, and scaled in direct relation to the userbase.\";\n\n\tconst bannerVid = (\n\t\t<video\n\t\t\tcontrols\n\t\t\tsrc=\"https://res.cloudinary.com/dunirybkl/video/upload/v1599996904/portfoli/videos/alfred_jzfoud.webm\"\n\t\t\tclassName={`${BANNER_CSS_CLASSES.BASE} ${BANNER_CSS_CLASSES.PHONE}`}\n\t\t/>\n\t);\n\n\tconst techIcons: Array<keyof typeof TechIcons> = useMemo(() => {\n\t\treturn [\"rails\", \"nokogiri\", \"sql\"];\n\t}, []);\n\n\tconst externals = useMemo((): external[] => {\n\t\treturn [{ title: \"GitHub\", url: \"https://github.com/yuvd/alfred\" }];\n\t}, []);\n\n\treturn (\n\t\t<ProjectPage\n\t\t\ttitle={title}\n\t\t\tdesc={desc}\n\t\t\tprojBanner={bannerVid}\n\t\t\ttechIcons={techIcons}\n\t\t\texternals={externals}\n\t\t/>\n\t);\n}\n","import React, { useMemo } from \"react\";\nimport ProjectPage from \"../ProjectPage\";\n\nimport TechIcons from \"../utils/consts/TechIcons\";\nimport BANNER_CSS_CLASSES from \"../utils/consts/BannerCssClasses\";\n\nimport \"./ProjectB.css\";\n\n// import external from \"../../../../../utils/types/external\";\n\nexport default function ProjectB() {\n\tconst title = \"CampFire\";\n\n\tconst desc =\n\t\t\"CampFire is a Social Streaming app. You can watch anything in the world on it, with your friends. As you browse through the selection of titles with your friends, all you need to do is select one you like and you'll be watching it together inside the app. CampFire also supports watching Netflix together - so long as all users have a Netflix account, you'll be presented with Netflix's huge selection, and you can watch them together with your friends while chatting and having a good time. CampFire is a HUGE project and uses many different tools and technologies to make it happen. It was built using the MERN Stack. The server uses Socket.IO to maintain, monitor and connect rooms. After the connection is made, users are connected to each other directly in a P2P fashion using WebRTC. CampFire uses the TMDB API to show users information about every show and movie in existence (for the most part), so they can browse through it. The media the users consume and communicate is never routed through the server, rather passed through WebRTC. In order to find streaming sources for the titles they like, users install a Desktop Extension - a small Electron.js app that scours the internet for sources, downloads and streams them locally (while synced in the same aforementioned P2P fashion) for each user. In order to allow users to enjoy Netflix together, a Chrome extension is also shipped with CampFire, which overcomes some of the technical restrictions that prevent Netflix from being shown in an iframe, while also handling synchronization of the video between all the peers. \\n \\n CampFire is currently in closed beta and can only be demoed upon request and depending on permission from the client who owns it \";\n\n\tconst bannerImg = (\n\t\t<img\n\t\t\tclassName={`${BANNER_CSS_CLASSES.BASE} ${BANNER_CSS_CLASSES.DESKTOP}`}\n\t\t\tsrc=\"https://res.cloudinary.com/dunirybkl/image/upload/v1600701453/portfoli/campfire.svg\"\n\t\t\talt=\"campfire\"\n\t\t\tstyle={{\n\t\t\t\tpaddingLeft: \"100px\",\n\t\t\t\tpaddingRight: \"100px\",\n\t\t\t\tpaddingTop: \"12.5px\",\n\t\t\t\tpaddingBottom: \"12.5px\",\n\t\t\t}}\n\t\t/>\n\t);\n\n\tconst techIcons: Array<keyof typeof TechIcons> = useMemo(() => {\n\t\treturn [\"react\", \"nodejs\", \"socketio\", \"webrtc\", \"electron\"];\n\t}, []);\n\n\treturn (\n\t\t<ProjectPage\n\t\t\ttitle={title}\n\t\t\tdesc={desc}\n\t\t\tprojBanner={bannerImg}\n\t\t\ttechIcons={techIcons}\n\t\t/>\n\t);\n}\n","import React, { useMemo, ReactElement } from \"react\";\nimport ProjectA from \"./ProjectPage/ProjectA/ProjectA\";\nimport ProjectB from \"./ProjectPage/ProjectB/ProjectB\";\nimport { useSelector } from \"react-redux\";\n\nimport storeState from \"../../../utils/types/redux/state\";\n\nexport default function ProjectsRouter() {\n\tconst activeProj = useSelector((state: storeState) => state.activeProj);\n\n\tconst projects = useMemo((): ReactElement[] => {\n\t\tconst p = [];\n\n\t\tp.push(<ProjectB />);\n\t\tp.push(<ProjectA />);\n\n\t\treturn p;\n\t}, []);\n\n\treturn <span className=\"page\">{projects[activeProj! - 1]}</span>;\n}\n","import { Tooltip } from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\n\nimport \"./Contact.css\";\n\ntype contactIcon = { title: string; imgUrl: string; contactUrl: string };\n\nexport default function Contact() {\n\tconst contactIcons = useMemo((): JSX.Element[] => {\n\t\tlet ci = [];\n\n\t\tci.push({\n\t\t\ttitle: \"Email\",\n\t\t\timgUrl:\n\t\t\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1600002312/portfoli/tech%20icons/email-ti_gaobqd.png\",\n\t\t\tcontactUrl: \"mailto:yuvald29@protonmail.com\",\n\t\t});\n\t\tci.push({\n\t\t\ttitle: \"LinkedIn\",\n\t\t\timgUrl:\n\t\t\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1600002316/portfoli/tech%20icons/li-ti_gwl83j.png\",\n\t\t\tcontactUrl: \"https://www.linkedin.com/in/yuval-drori/\",\n\t\t});\n\t\tci.push({\n\t\t\ttitle: \"GitHub\",\n\t\t\timgUrl:\n\t\t\t\t\"https://res.cloudinary.com/dunirybkl/image/upload/v1600002314/portfoli/tech%20icons/gh-ti_agvbel.png\",\n\t\t\tcontactUrl: \"https://github.com/yuvd\",\n\t\t});\n\n\t\tci = ci.map(\n\t\t\t(ci: contactIcon, index: number): JSX.Element => {\n\t\t\t\treturn (\n\t\t\t\t\t<Tooltip title={ci.title} arrow placement=\"top\">\n\t\t\t\t\t\t<a href={ci.contactUrl}>\n\t\t\t\t\t\t\t<img key={index} src={ci.imgUrl} alt=\"contact\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\treturn ci;\n\t}, []);\n\n\treturn (\n\t\t<div className=\"page\">\n\t\t\t<div id=\"contactContainer\">\n\t\t\t\t<p id=\"contactTitle\" className=\"pageTitle\">\n\t\t\t\t\tGet in Touch\n\t\t\t\t</p>\n\t\t\t\t<span id=\"ceContainer\">\n\t\t\t\t\t<p id=\"contactExpl\" className=\"pageExpl\">\n\t\t\t\t\t\tGot a project in mind? Just want to ask something? Let's talk.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tFor more projects, please check out my GitHub.\n\t\t\t\t\t</p>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div id=\"ciContainer\">{contactIcons}</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Landing from \"./components/pages/Landing/Landing\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ProjectsRouter from \"./components/pages/Projects/ProjectsRouter\";\nimport Contact from \"./components/pages/Contact/Contact\";\n\nfunction App() {\n\treturn (\n\t\t<div id=\"appRoot\">\n\t\t\t<Sidebar />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Landing} />\n\t\t\t\t<Route exact path=\"/projects\" component={ProjectsRouter} />\n\t\t\t\t<Route exact path=\"/contact\" component={Contact} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import PROJ_ACTION_TYPES from \"../actions/action_types/PROJ_ACTION_TYPES\";\nimport storeState from \"../../utils/types/redux/state\";\nimport allowedAction from \"../../utils/types/redux/actions\";\n\nconst initialState: storeState = {\n\tactiveProj: 1,\n};\n\nfunction rootReducer(state: storeState = initialState, action: allowedAction) {\n\tswitch (action.type) {\n\t\tcase PROJ_ACTION_TYPES.CHANGE_PROJECT: {\n\t\t\treturn { ...state, activeProj: action.payload };\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/index\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App />\n\t\t\t</BrowserRouter>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}